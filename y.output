Terminals unused in grammar

   DO
   DONE
   IFY
   IFX


Grammar

    0 $accept: PROGRAM $end

    1 $@1: %empty

    2 PROGRAM: _DECLARE declaration_list $@1 _MAIN '{' commands '}'

    3 declaration_list: dec_seq declaration

    4 dec_seq: %empty
    5        | dec_seq declaration

    6 declaration: id_type id_seq IDENTIFIER ';'

    7 $@2: %empty

    8 declaration: $@2 id_seq IDENTIFIER ';'
    9            | id_type id_seq IDENTIFIER

   10 id_seq: %empty
   11       | id_seq IDENTIFIER ','

   12 id_type: INTEGER
   13        | CHAR
   14        | FLOAT
   15        | BOOL

   16 commands: %empty
   17         | commands command ';'

   18 log_op: AND
   19       | OR

   20 command: %empty
   21        | IDENTIFIER ASSIGNOP expr
   22        | IDENTIFIER ASSIGNOP
   23        | IDENTIFIER expr
   24        | ifstat

   25 $@3: %empty

   26 $@4: %empty

   27 $@5: %empty

   28 $@6: %empty

   29 command: WHILE $@3 '(' conditions ')' $@4 '{' $@5 commands $@6 '}'

   30 conditions: expr

   31 $@7: %empty

   32 conditions: expr $@7 log_op conditions

   33 $@8: %empty

   34 $@9: %empty

   35 $@10: %empty

   36 $@11: %empty

   37 $@12: %empty

   38 ifstat: IF '(' conditions ')' $@8 THEN $@9 commands $@10 ELSE $@11 commands $@12 FI

   39 expr: expr '+' expr
   40     | expr '-' expr
   41     | expr '*' expr
   42     | expr '/' expr
   43     | expr '>' expr
   44     | expr '<' expr
   45     | expr '=' expr
   46     | expr LE_ expr
   47     | expr GE_ expr
   48     | expr NE_ expr
   49     | OB expr CB
   50     | FNUMBER
   51     | CHARVAL
   52     | IDENTIFIER
   53     | NUMBER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 29 38
')' (41) 29 38
'*' (42) 41
'+' (43) 39
',' (44) 11
'-' (45) 40
'/' (47) 42
';' (59) 6 8 17
'<' (60) 44
'=' (61) 45
'>' (62) 43
'{' (123) 2 29
'}' (125) 2 29
error (256)
NUMBER (258) 53
FNUMBER (259) 50
CHARVAL (260) 51
IDENTIFIER (261) 6 8 9 11 21 22 23 52
WHILE (262) 29
IF (263) 38
ASSIGNOP (264) 21 22
_DECLARE (265) 2
_MAIN (266) 2
DO (267)
DONE (268)
INTEGER (269) 12
FLOAT (270) 14
CHAR (271) 13
BOOL (272) 15
FI (273) 38
THEN (274) 38
ELSE (275) 38
AND (276) 18
OR (277) 19
OB (278) 49
CB (279) 49
IFY (280)
NE_ (281) 48
LE_ (282) 46
GE_ (283) 47
IFX (284)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
PROGRAM (44)
    on left: 2, on right: 0
$@1 (45)
    on left: 1, on right: 2
declaration_list (46)
    on left: 3, on right: 2
dec_seq (47)
    on left: 4 5, on right: 3 5
declaration (48)
    on left: 6 8 9, on right: 3 5
$@2 (49)
    on left: 7, on right: 8
id_seq (50)
    on left: 10 11, on right: 6 8 9 11
id_type (51)
    on left: 12 13 14 15, on right: 6 9
commands (52)
    on left: 16 17, on right: 2 17 29 38
log_op (53)
    on left: 18 19, on right: 32
command (54)
    on left: 20 21 22 23 24 29, on right: 17
$@3 (55)
    on left: 25, on right: 29
$@4 (56)
    on left: 26, on right: 29
$@5 (57)
    on left: 27, on right: 29
$@6 (58)
    on left: 28, on right: 29
conditions (59)
    on left: 30 32, on right: 29 32 38
$@7 (60)
    on left: 31, on right: 32
ifstat (61)
    on left: 38, on right: 24
$@8 (62)
    on left: 33, on right: 38
$@9 (63)
    on left: 34, on right: 38
$@10 (64)
    on left: 35, on right: 38
$@11 (65)
    on left: 36, on right: 38
$@12 (66)
    on left: 37, on right: 38
expr (67)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53, on right:
    21 23 30 32 39 40 41 42 43 44 45 46 47 48 49


State 0

    0 $accept: . PROGRAM $end

    _DECLARE  shift, and go to state 1

    PROGRAM  go to state 2


State 1

    2 PROGRAM: _DECLARE . declaration_list $@1 _MAIN '{' commands '}'

    $default  reduce using rule 4 (dec_seq)

    declaration_list  go to state 3
    dec_seq           go to state 4


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 5


State 3

    2 PROGRAM: _DECLARE declaration_list . $@1 _MAIN '{' commands '}'

    $default  reduce using rule 1 ($@1)

    $@1  go to state 6


State 4

    3 declaration_list: dec_seq . declaration
    5 dec_seq: dec_seq . declaration

    INTEGER  shift, and go to state 7
    FLOAT    shift, and go to state 8
    CHAR     shift, and go to state 9
    BOOL     shift, and go to state 10

    $default  reduce using rule 7 ($@2)

    declaration  go to state 11
    $@2          go to state 12
    id_type      go to state 13


State 5

    0 $accept: PROGRAM $end .

    $default  accept


State 6

    2 PROGRAM: _DECLARE declaration_list $@1 . _MAIN '{' commands '}'

    _MAIN  shift, and go to state 14


State 7

   12 id_type: INTEGER .

    $default  reduce using rule 12 (id_type)


State 8

   14 id_type: FLOAT .

    $default  reduce using rule 14 (id_type)


State 9

   13 id_type: CHAR .

    $default  reduce using rule 13 (id_type)


State 10

   15 id_type: BOOL .

    $default  reduce using rule 15 (id_type)


State 11

    3 declaration_list: dec_seq declaration .
    5 dec_seq: dec_seq declaration .

    _MAIN     reduce using rule 3 (declaration_list)
    $default  reduce using rule 5 (dec_seq)


State 12

    8 declaration: $@2 . id_seq IDENTIFIER ';'

    $default  reduce using rule 10 (id_seq)

    id_seq  go to state 15


State 13

    6 declaration: id_type . id_seq IDENTIFIER ';'
    9            | id_type . id_seq IDENTIFIER

    $default  reduce using rule 10 (id_seq)

    id_seq  go to state 16


State 14

    2 PROGRAM: _DECLARE declaration_list $@1 _MAIN . '{' commands '}'

    '{'  shift, and go to state 17


State 15

    8 declaration: $@2 id_seq . IDENTIFIER ';'
   11 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 18


State 16

    6 declaration: id_type id_seq . IDENTIFIER ';'
    9            | id_type id_seq . IDENTIFIER
   11 id_seq: id_seq . IDENTIFIER ','

    IDENTIFIER  shift, and go to state 19


State 17

    2 PROGRAM: _DECLARE declaration_list $@1 _MAIN '{' . commands '}'

    $default  reduce using rule 16 (commands)

    commands  go to state 20


State 18

    8 declaration: $@2 id_seq IDENTIFIER . ';'
   11 id_seq: id_seq IDENTIFIER . ','

    ';'  shift, and go to state 21
    ','  shift, and go to state 22


State 19

    6 declaration: id_type id_seq IDENTIFIER . ';'
    9            | id_type id_seq IDENTIFIER .
   11 id_seq: id_seq IDENTIFIER . ','

    ';'  shift, and go to state 23
    ','  shift, and go to state 22

    $default  reduce using rule 9 (declaration)


State 20

    2 PROGRAM: _DECLARE declaration_list $@1 _MAIN '{' commands . '}'
   17 commands: commands . command ';'

    IDENTIFIER  shift, and go to state 24
    WHILE       shift, and go to state 25
    IF          shift, and go to state 26
    '}'         shift, and go to state 27

    $default  reduce using rule 20 (command)

    command  go to state 28
    ifstat   go to state 29


State 21

    8 declaration: $@2 id_seq IDENTIFIER ';' .

    $default  reduce using rule 8 (declaration)


State 22

   11 id_seq: id_seq IDENTIFIER ',' .

    $default  reduce using rule 11 (id_seq)


State 23

    6 declaration: id_type id_seq IDENTIFIER ';' .

    $default  reduce using rule 6 (declaration)


State 24

   21 command: IDENTIFIER . ASSIGNOP expr
   22        | IDENTIFIER . ASSIGNOP
   23        | IDENTIFIER . expr

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    ASSIGNOP    shift, and go to state 34
    OB          shift, and go to state 35

    expr  go to state 36


State 25

   29 command: WHILE . $@3 '(' conditions ')' $@4 '{' $@5 commands $@6 '}'

    $default  reduce using rule 25 ($@3)

    $@3  go to state 37


State 26

   38 ifstat: IF . '(' conditions ')' $@8 THEN $@9 commands $@10 ELSE $@11 commands $@12 FI

    '('  shift, and go to state 38


State 27

    2 PROGRAM: _DECLARE declaration_list $@1 _MAIN '{' commands '}' .

    $default  reduce using rule 2 (PROGRAM)


State 28

   17 commands: commands command . ';'

    ';'  shift, and go to state 39


State 29

   24 command: ifstat .

    $default  reduce using rule 24 (command)


State 30

   53 expr: NUMBER .

    $default  reduce using rule 53 (expr)


State 31

   50 expr: FNUMBER .

    $default  reduce using rule 50 (expr)


State 32

   51 expr: CHARVAL .

    $default  reduce using rule 51 (expr)


State 33

   52 expr: IDENTIFIER .

    $default  reduce using rule 52 (expr)


State 34

   21 command: IDENTIFIER ASSIGNOP . expr
   22        | IDENTIFIER ASSIGNOP .

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    $default  reduce using rule 22 (command)

    expr  go to state 40


State 35

   49 expr: OB . expr CB

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    expr  go to state 41


State 36

   23 command: IDENTIFIER expr .
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '=' expr
   46     | expr . LE_ expr
   47     | expr . GE_ expr
   48     | expr . NE_ expr

    '='  shift, and go to state 42
    NE_  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    LE_  shift, and go to state 46
    GE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 23 (command)


State 37

   29 command: WHILE $@3 . '(' conditions ')' $@4 '{' $@5 commands $@6 '}'

    '('  shift, and go to state 52


State 38

   38 ifstat: IF '(' . conditions ')' $@8 THEN $@9 commands $@10 ELSE $@11 commands $@12 FI

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    conditions  go to state 53
    expr        go to state 54


State 39

   17 commands: commands command ';' .

    $default  reduce using rule 17 (commands)


State 40

   21 command: IDENTIFIER ASSIGNOP expr .
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '=' expr
   46     | expr . LE_ expr
   47     | expr . GE_ expr
   48     | expr . NE_ expr

    '='  shift, and go to state 42
    NE_  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    LE_  shift, and go to state 46
    GE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 21 (command)


State 41

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '=' expr
   46     | expr . LE_ expr
   47     | expr . GE_ expr
   48     | expr . NE_ expr
   49     | OB expr . CB

    CB   shift, and go to state 55
    '='  shift, and go to state 42
    NE_  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    LE_  shift, and go to state 46
    GE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51


State 42

   45 expr: expr '=' . expr

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    expr  go to state 56


State 43

   48 expr: expr NE_ . expr

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    expr  go to state 57


State 44

   44 expr: expr '<' . expr

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    expr  go to state 58


State 45

   43 expr: expr '>' . expr

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    expr  go to state 59


State 46

   46 expr: expr LE_ . expr

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    expr  go to state 60


State 47

   47 expr: expr GE_ . expr

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    expr  go to state 61


State 48

   39 expr: expr '+' . expr

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    expr  go to state 62


State 49

   40 expr: expr '-' . expr

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    expr  go to state 63


State 50

   41 expr: expr '*' . expr

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    expr  go to state 64


State 51

   42 expr: expr '/' . expr

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    expr  go to state 65


State 52

   29 command: WHILE $@3 '(' . conditions ')' $@4 '{' $@5 commands $@6 '}'

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    conditions  go to state 66
    expr        go to state 54


State 53

   38 ifstat: IF '(' conditions . ')' $@8 THEN $@9 commands $@10 ELSE $@11 commands $@12 FI

    ')'  shift, and go to state 67


State 54

   30 conditions: expr .
   32           | expr . $@7 log_op conditions
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '=' expr
   46     | expr . LE_ expr
   47     | expr . GE_ expr
   48     | expr . NE_ expr

    '='  shift, and go to state 42
    NE_  shift, and go to state 43
    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    LE_  shift, and go to state 46
    GE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    ')'       reduce using rule 30 (conditions)
    $default  reduce using rule 31 ($@7)

    $@7  go to state 68


State 55

   49 expr: OB expr CB .

    $default  reduce using rule 49 (expr)


State 56

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '=' expr
   45     | expr '=' expr .
   46     | expr . LE_ expr
   47     | expr . GE_ expr
   48     | expr . NE_ expr

    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    LE_  shift, and go to state 46
    GE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 45 (expr)


State 57

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '=' expr
   46     | expr . LE_ expr
   47     | expr . GE_ expr
   48     | expr . NE_ expr
   48     | expr NE_ expr .

    '<'  shift, and go to state 44
    '>'  shift, and go to state 45
    LE_  shift, and go to state 46
    GE_  shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 48 (expr)


State 58

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   44     | expr '<' expr .
   45     | expr . '=' expr
   46     | expr . LE_ expr
   47     | expr . GE_ expr
   48     | expr . NE_ expr

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 44 (expr)


State 59

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '>' expr
   43     | expr '>' expr .
   44     | expr . '<' expr
   45     | expr . '=' expr
   46     | expr . LE_ expr
   47     | expr . GE_ expr
   48     | expr . NE_ expr

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 43 (expr)


State 60

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '=' expr
   46     | expr . LE_ expr
   46     | expr LE_ expr .
   47     | expr . GE_ expr
   48     | expr . NE_ expr

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 46 (expr)


State 61

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '=' expr
   46     | expr . LE_ expr
   47     | expr . GE_ expr
   47     | expr GE_ expr .
   48     | expr . NE_ expr

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 47 (expr)


State 62

   39 expr: expr . '+' expr
   39     | expr '+' expr .
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '=' expr
   46     | expr . LE_ expr
   47     | expr . GE_ expr
   48     | expr . NE_ expr

    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 39 (expr)


State 63

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   40     | expr '-' expr .
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '=' expr
   46     | expr . LE_ expr
   47     | expr . GE_ expr
   48     | expr . NE_ expr

    '*'  shift, and go to state 50
    '/'  shift, and go to state 51

    $default  reduce using rule 40 (expr)


State 64

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   41     | expr '*' expr .
   42     | expr . '/' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '=' expr
   46     | expr . LE_ expr
   47     | expr . GE_ expr
   48     | expr . NE_ expr

    $default  reduce using rule 41 (expr)


State 65

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   42     | expr '/' expr .
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '=' expr
   46     | expr . LE_ expr
   47     | expr . GE_ expr
   48     | expr . NE_ expr

    $default  reduce using rule 42 (expr)


State 66

   29 command: WHILE $@3 '(' conditions . ')' $@4 '{' $@5 commands $@6 '}'

    ')'  shift, and go to state 69


State 67

   38 ifstat: IF '(' conditions ')' . $@8 THEN $@9 commands $@10 ELSE $@11 commands $@12 FI

    $default  reduce using rule 33 ($@8)

    $@8  go to state 70


State 68

   32 conditions: expr $@7 . log_op conditions

    AND  shift, and go to state 71
    OR   shift, and go to state 72

    log_op  go to state 73


State 69

   29 command: WHILE $@3 '(' conditions ')' . $@4 '{' $@5 commands $@6 '}'

    $default  reduce using rule 26 ($@4)

    $@4  go to state 74


State 70

   38 ifstat: IF '(' conditions ')' $@8 . THEN $@9 commands $@10 ELSE $@11 commands $@12 FI

    THEN  shift, and go to state 75


State 71

   18 log_op: AND .

    $default  reduce using rule 18 (log_op)


State 72

   19 log_op: OR .

    $default  reduce using rule 19 (log_op)


State 73

   32 conditions: expr $@7 log_op . conditions

    NUMBER      shift, and go to state 30
    FNUMBER     shift, and go to state 31
    CHARVAL     shift, and go to state 32
    IDENTIFIER  shift, and go to state 33
    OB          shift, and go to state 35

    conditions  go to state 76
    expr        go to state 54


State 74

   29 command: WHILE $@3 '(' conditions ')' $@4 . '{' $@5 commands $@6 '}'

    '{'  shift, and go to state 77


State 75

   38 ifstat: IF '(' conditions ')' $@8 THEN . $@9 commands $@10 ELSE $@11 commands $@12 FI

    $default  reduce using rule 34 ($@9)

    $@9  go to state 78


State 76

   32 conditions: expr $@7 log_op conditions .

    $default  reduce using rule 32 (conditions)


State 77

   29 command: WHILE $@3 '(' conditions ')' $@4 '{' . $@5 commands $@6 '}'

    $default  reduce using rule 27 ($@5)

    $@5  go to state 79


State 78

   38 ifstat: IF '(' conditions ')' $@8 THEN $@9 . commands $@10 ELSE $@11 commands $@12 FI

    $default  reduce using rule 16 (commands)

    commands  go to state 80


State 79

   29 command: WHILE $@3 '(' conditions ')' $@4 '{' $@5 . commands $@6 '}'

    $default  reduce using rule 16 (commands)

    commands  go to state 81


State 80

   17 commands: commands . command ';'
   38 ifstat: IF '(' conditions ')' $@8 THEN $@9 commands . $@10 ELSE $@11 commands $@12 FI

    IDENTIFIER  shift, and go to state 24
    WHILE       shift, and go to state 25
    IF          shift, and go to state 26

    ELSE      reduce using rule 35 ($@10)
    $default  reduce using rule 20 (command)

    command  go to state 28
    ifstat   go to state 29
    $@10     go to state 82


State 81

   17 commands: commands . command ';'
   29 command: WHILE $@3 '(' conditions ')' $@4 '{' $@5 commands . $@6 '}'

    IDENTIFIER  shift, and go to state 24
    WHILE       shift, and go to state 25
    IF          shift, and go to state 26

    '}'       reduce using rule 28 ($@6)
    $default  reduce using rule 20 (command)

    command  go to state 28
    $@6      go to state 83
    ifstat   go to state 29


State 82

   38 ifstat: IF '(' conditions ')' $@8 THEN $@9 commands $@10 . ELSE $@11 commands $@12 FI

    ELSE  shift, and go to state 84


State 83

   29 command: WHILE $@3 '(' conditions ')' $@4 '{' $@5 commands $@6 . '}'

    '}'  shift, and go to state 85


State 84

   38 ifstat: IF '(' conditions ')' $@8 THEN $@9 commands $@10 ELSE . $@11 commands $@12 FI

    $default  reduce using rule 36 ($@11)

    $@11  go to state 86


State 85

   29 command: WHILE $@3 '(' conditions ')' $@4 '{' $@5 commands $@6 '}' .

    $default  reduce using rule 29 (command)


State 86

   38 ifstat: IF '(' conditions ')' $@8 THEN $@9 commands $@10 ELSE $@11 . commands $@12 FI

    $default  reduce using rule 16 (commands)

    commands  go to state 87


State 87

   17 commands: commands . command ';'
   38 ifstat: IF '(' conditions ')' $@8 THEN $@9 commands $@10 ELSE $@11 commands . $@12 FI

    IDENTIFIER  shift, and go to state 24
    WHILE       shift, and go to state 25
    IF          shift, and go to state 26

    FI        reduce using rule 37 ($@12)
    $default  reduce using rule 20 (command)

    command  go to state 28
    ifstat   go to state 29
    $@12     go to state 88


State 88

   38 ifstat: IF '(' conditions ')' $@8 THEN $@9 commands $@10 ELSE $@11 commands $@12 . FI

    FI  shift, and go to state 89


State 89

   38 ifstat: IF '(' conditions ')' $@8 THEN $@9 commands $@10 ELSE $@11 commands $@12 FI .

    $default  reduce using rule 38 (ifstat)
